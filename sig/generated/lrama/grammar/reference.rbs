# Generated from lib/lrama/grammar/reference.rb with RBS::Inline

module Lrama
  class Grammar
    # type: :dollar or :at
    # name: String (e.g. $$, $foo, $expr.right)
    # number: Integer (e.g. $1)
    # index: Integer
    # ex_tag: "$<tag>1" (Optional)
    class Reference
      attr_accessor type: ::Symbol

      attr_accessor name: String

      attr_accessor number: Integer

      attr_accessor index: Integer

      attr_accessor ex_tag: Lexer::Token::Base?

      attr_accessor first_column: Integer

      attr_accessor last_column: Integer

      def initialize: (type: ::Symbol, first_column: Integer, last_column: Integer, ?name: String, ?number: Integer, ?index: Integer, ?ex_tag: Lexer::Token::Base?) -> void

      # @rbs () -> (String|Integer)
      def value: () -> (String | Integer)
    end
  end
end
