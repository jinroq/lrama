# Generated from lib/lrama/grammar/precedence.rb with RBS::Inline

module Lrama
  class Grammar
    class Precedence
      include Comparable

      type type_enum = :left | :right | :nonassoc | :precedence

      attr_accessor type: type_enum

      attr_accessor symbol: Grammar::Symbol

      attr_accessor precedence: Integer

      attr_accessor s_value: String

      attr_accessor lineno: Integer

      def initialize: (?type: type_enum, ?symbol: Grammar::Symbol, ?precedence: Integer, ?s_value: ::String, ?lineno: Integer) -> void

      attr_reader used_by_lalr: Array[State::ResolvedConflict]

      attr_reader used_by_ielr: Array[State::ResolvedConflict]

      # @rbs (Precedence other) -> Integer
      def <=>: (Precedence other) -> Integer

      # @rbs (State::ResolvedConflict resolved_conflict) -> void
      def mark_used_by_lalr: (State::ResolvedConflict resolved_conflict) -> void

      # @rbs (State::ResolvedConflict resolved_conflict) -> void
      def mark_used_by_ielr: (State::ResolvedConflict resolved_conflict) -> void

      # @rbs () -> bool
      def used_by?: () -> bool

      # @rbs () -> bool
      def used_by_lalr?: () -> bool

      # @rbs () -> bool
      def used_by_ielr?: () -> bool
    end
  end
end
